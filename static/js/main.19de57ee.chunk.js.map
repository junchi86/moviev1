{"version":3,"sources":["Component/Movie.js","Component/MovieHome.js","Component/MovieDetail.js","Component/partials/Header.js","Component/About.js","Component/MovieSearch.js","App.js","serviceWorker.js","index.js"],"names":["Movie","year","title","summary","poster","genres","trailer","background","to","pathname","state","key","className","hoverable","cover","src","alt","Meta","description","slice","MovieHome","isLoading","movies","getMovie","a","axios","get","data","setState","this","antIcon","type","style","fontSize","spin","indicator","map","movie","yt_trailer_code","medium_cover_image","background_image","React","Component","Div","styled","div","MovieDetail","location","backgroundRepeat","backgroundSize","frameBorder","allow","allowFullScreen","i","DDiv","Header","history","useHistory","mode","Search","placeholder","onSearch","value","push","Item","href","rel","H1","h1","About","MovieSearch","undefined","props","GlobalStyle","createGlobalStyle","reset","App","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19de57ee.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport './Movie.css'\r\nimport {Card} from 'antd'\r\n\r\nfunction Movie({ year, title, summary, poster, genres, trailer,background }) {\r\n    return (\r\n        <Link\r\n                to={{\r\n                    pathname: `/movie-detail/${trailer}`,\r\n                    state: {\r\n                        year,\r\n                        title,\r\n                        summary,\r\n                        poster,\r\n                        genres,\r\n                        trailer,\r\n                        background\r\n                    }\r\n                }}\r\n            >\r\n        <Card\r\n            key={trailer}\r\n            className = 'movie'\r\n            hoverable\r\n            cover={<img src={poster} alt={title} title={title} />}\r\n        >\r\n            <Card.Meta title={title + year} description={summary.slice(0, 140)+'...'} />\r\n        </Card></Link>       \r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    trailer: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Movie\r\n\r\n\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Movie from './Movie'\r\nimport './MovieHome.css'\r\nimport {Spin,Icon} from 'antd'\r\n\r\nclass MovieHome extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  }\r\n\r\n  getMovie = async () => {\r\n    const { data: { data: { movies } } } = await axios.get(`https://yts.mx/api/v2/list_movies.json?sort_by=rating`)\r\n    this.setState({ movies, isLoading: false })}\r\n\r\n  componentDidMount(){\r\n    this.getMovie()\r\n  }\r\n  \r\n  render() {\r\n    const antIcon = <Icon type=\"loading\" style={{ fontSize: 35 }} spin />\r\n    const { isLoading, movies } = this.state\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\"> \r\n            <span className=\"loader__text\">Loading...</span> <Spin indicator={antIcon} />\r\n          </div>\r\n         \r\n        ) : (\r\n            <div className=\"movies\">\r\n              {movies.map(movie => (\r\n                <Movie\r\n                  key={movie.yt_trailer_code}\r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary}\r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                  trailer={movie.yt_trailer_code}\r\n                  background={movie.background_image}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default MovieHome;\r\n","\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Div = styled.div`\r\nwidth:100%;\r\nheight:94vh;\r\nmargin:auto;\r\nposition:relative;\r\n    iframe{\r\n        position:absolute;\r\n        width: 60%;\r\n        height: 40vh;\r\n        margin:auto;\r\n        transform:translateX(-50%);\r\n        top:6%;\r\n        left:50%;\r\n        border-radius:10px;     \r\n        z-index:10;\r\n    }\r\n    .text{\r\n        position:absolute;\r\n        width:60%;\r\n        height:auto;\r\n        padding:30px;\r\n        border-radius:10px;\r\n        top:56%;\r\n        transform:translateX(-50%);\r\n        left:50%;\r\n        background:rgba(0,0,0,0.6);\r\n        h1{\r\n            padding-bottom:20px;\r\n            font-size:40px;\r\n            font-weight:bold;\r\n            color:white;\r\n        }\r\n        h2{\r\n            font-size:30px;\r\n            padding-bottom:10px;\r\n            color:lightpink\r\n        }\r\n        h3{\r\n            font-size:30px;\r\n            color:gray\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width:1200px) {\r\n        width:100%;\r\n        height:100%;\r\n        position:static;\r\n        margin:auto;\r\n        iframe{\r\n            position:static;\r\n            width:100%;\r\n            max-height: 80vh;\r\n            top:0;\r\n            left:0;\r\n            transform:none;\r\n        }\r\n        .text{position:static;\r\n            margin:1vh auto 0 auto;\r\n            width:100%;\r\n            height:auto;\r\n            top:0;\r\n            left:0;\r\n            transform:none;\r\n            h1{font-size:30px}\r\n            h2{font-size:20px}\r\n            h3{font-size:20px}\r\n        }\r\n    }\r\n\r\n`\r\n\r\nfunction MovieDetail({ location }) {\r\n    return (\r\n        <Div style={{background: `URL(${location.state.background})`,\r\n                    backgroundRepeat:'no-repeat',\r\n                    backgroundSize:'cover'}}>\r\n            <iframe title={location.state.trailer} src={`https://www.youtube.com/embed/${location.state.trailer}`} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen />\r\n            <div className='text'>\r\n                <h1>{location.state.title}</h1>\r\n                <h2>{location.state.year} {location.state.genres.map(i=>i)}</h2>\r\n                <h3>{location.state.summary.slice(0,400)}</h3>\r\n            </div>\r\n        </Div>\r\n    )}\r\n\r\nexport default MovieDetail\r\n","import React from 'react'\r\nimport { Menu, Icon } from 'antd';\r\nimport styled from 'styled-components'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {Input} from 'antd'\r\nimport 'antd/dist/antd.css'\r\n\r\nconst DDiv = styled.div`\r\n    .menu{\r\n        position:relative;\r\n        width:100%;\r\n        height:6vh;\r\n        font-size:1.5em;\r\n        padding:0 13vw;\r\n    }\r\n    .item{\r\n        line-height:6vh;\r\n    }\r\n    .input{\r\n        width:30vw;\r\n        line-height:6vh;\r\n        margin-right:2vw\r\n    }\r\n    @media only screen and (max-width:769px) {\r\n        .menu{\r\n            position:relative;\r\n            width:100%;\r\n            height:50px;\r\n            font-size:1.3em;\r\n            padding:0 5% \r\n        }\r\n        .item{\r\n            height:50px;\r\n            line-height:50px;\r\n        }\r\n        .input{\r\n            width:50vw;\r\n            line-height:50px;\r\n            margin-right:0\r\n        }\r\n    }\r\n\r\n`\r\n\r\nfunction Header() {\r\n    let history = useHistory()\r\n    return (\r\n        <>\r\n        <DDiv>\r\n            <Menu className=\"menu\" mode=\"horizontal\">\r\n                <Input.Search\r\n                    key='1'\r\n                    className=\"input\"\r\n                    placeholder=\"input search text\"\r\n                    onSearch={value=>{history.push({pathname:`/search/${value}`,state:{\r\n                        value\r\n                    }})}}\r\n                />\r\n                <Menu.Item className=\"item\" key='2'><Link to=\"/\">Movies</Link></Menu.Item>\r\n                <Menu.Item className=\"item\" key='3'><Link to=\"/about\">About</Link></Menu.Item>\r\n                <Menu.Item className=\"item\" key='4'><a href=\"https://junchi86.github.io/index\" rel=\"nonrefferer noopener\">Hyuk's-Momentum</a></Menu.Item> \r\n            </Menu>        \r\n        </DDiv>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst H1 = styled.h1`\r\nline-height:94vh;\r\nfont-size:60px;\r\ntext-align:center;\r\n`\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <H1>movie Api, React</H1>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Movie from './Movie'\r\nimport './MovieHome.css'\r\nimport {Spin,Icon} from 'antd'\r\n\r\nclass MovieSearch extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  }\r\n\r\n  getMovie = async () => {\r\n      if(this.props.location.state.value!==(undefined)){\r\n      const { data: { data: { movies } } } = await axios.get(`https://yts.mx/api/v2/list_movies.json?sort_by=rating&query_term=${this.props.location.state.value}`)\r\n      this.setState({ movies, isLoading: false })}\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.getMovie()\r\n    this.props.location.state={pathname:'',state:{value:''}}\r\n  }\r\n  componentDidMount() {\r\n    this.getMovie()\r\n    this.props.location.state={pathname:'',state:{value:''}}\r\n  }\r\n  \r\n  render() {\r\n    const antIcon = <Icon type=\"loading\" style={{ fontSize: 35 }} spin />\r\n    const { isLoading, movies } = this.state\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\"> \r\n            <span className=\"loader__text\">Loading...</span> <Spin indicator={antIcon} />\r\n          </div>\r\n         \r\n        ) : (\r\n            <div className=\"movies\">\r\n              {movies? movies.map(movie => (\r\n                <Movie\r\n                  key={movie.yt_trailer_code}\r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary}\r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                  trailer={movie.yt_trailer_code}\r\n                  background={movie.background_image}\r\n                />\r\n              )):<h1>Result:0</h1>}\r\n            </div>\r\n          )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default MovieSearch;\r\n\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route,Switch } from 'react-router-dom'\r\nimport MovieHome from './Component/MovieHome';\r\nimport MovieDetail from './Component/MovieDetail';\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport reset from 'styled-reset'\r\nimport Header from './Component/partials/Header';\r\nimport 'antd/dist/antd.css'\r\nimport About from './Component/About';\r\nimport MovieSearch from './Component/MovieSearch';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n     ${reset};\r\n     a{\r\n         text-decoration:none;\r\n         color:inherit;\r\n     }\r\n     *{\r\n         box-sizing:boerder-box;\r\n     }\r\n     body{\r\n         font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n         font-size: 14px;\r\n         background:lightgray\r\n     }\r\n`\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/search/:value' component={MovieSearch}></Route>\r\n          <Route exact path='/' component={MovieHome}></Route>\r\n          <Route exact path='/about' component={About}></Route>\r\n          <Route path='/movie-detail/:trailer' component={MovieDetail}></Route>\r\n        </Switch>\r\n      </Router>\r\n      <GlobalStyle />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}